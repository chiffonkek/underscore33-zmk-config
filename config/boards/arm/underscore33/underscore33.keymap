    /*
    * Copyright (c) 2020 The ZMK Contributors
    *
    * SPDX-License-Identifier: MIT
    */

    // This key-map file WILL NOT WORK FOR YOU, you will need to modify it. I really do not recommend adapting to it.
    // This key-map file is set-up to be the split space layout.
    // I strongly urge you to customise your firmware to suit your usage.
    // Please feel free to join the ZMK server at https://discord.gg/TdRMQaTYdF for help.

    #include <behaviors.dtsi>
    #include <dt-bindings/zmk/keys.h>
    #include <dt-bindings/zmk/bt.h>

    &sk {
    release-after-ms = <2000>;
            };
#define AS(keycode) &as LS(keycode) keycode

    / {
    behaviors {
    
            as: auto_shift {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTO_SHIFT";
                #binding-cells = <2>;
                tapping_term_ms = <135>;
                quick_tap_ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            
        hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <170>;
                quick_tap_ms = <200>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            }; 
        tdhmbkt: Homerow-Mod-Tap-Dance-Bracket {
                compatible = "zmk,behavior-tap-dance";
                label = "Homerow Bracket-GUI";
                #binding-cells = <0>;
                tapping-term-ms = <170>;
                bindings = <&hm RGUI LBKT>, <&kp RBKT>;
            };
        tdhmuds: Homerow-Mod-Tap-Dance-Underscore {
                compatible = "zmk,behavior-tap-dance";
                label = "Homerow Minus-Underscore";
                #binding-cells = <0>;
                tapping-term-ms = <170>;
                bindings = <&hm LSHFT MINUS>, <&kp UNDER>;
            };
        tdcb: Comma-Backslash {
                compatible = "zmk,behavior-tap-dance";
                label = "Tap Dance Comma Backslash";
                #binding-cells = <0>;
                tapping-term-ms = <170>;
                bindings = <&kp COMMA>, <&kp BSLH>;
            };
        tdds: Dot-Slash {
                compatible = "zmk,behavior-tap-dance";
                label = "Tap Dance Dot Slash";
                #binding-cells = <0>;
                tapping-term-ms = <170>;
                bindings = <&kp DOT>, <&kp FSLH>;
            };
        tdqs: Quote-Semicolon {
                compatible = "zmk,behavior-tap-dance";
                label = "Tap Dance Quote Semicolon";
                #binding-cells = <0>;
                tapping-term-ms = <170>;
                bindings = <&kp APOS>, <&kp SEMI>;
            };
        };
            
        combos {
        compatible = "zmk,combos";
        combo_LYR1 {
            timeout-ms = <50>;
            key-positions = <34 35>;
            bindings = <&to 1>;
        };
        combo_LYR2 {
            timeout-ms = <50>;
            key-positions = <33 35>;
            bindings = <&to 2>;
        };
        combo_LYR3 {
            timeout-ms = <50>;
            key-positions = <32 35>;
            bindings = <&to 3>;
        };
        combo_CAPS {
            timeout-ms = <50>;
            key-positions = <13 16>;
            bindings = <&kp CAPS>;
            layers = <0>;
        };
        combo_bspc {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp BKSP>;
            layers = <0 1>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
            layers = <0 1>;
        };
        combo_esc {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&gresc>;
            layers = <0 1>;
        };
        combo_wordleft {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp LC(LEFT)>;
            layers = <0>;
        };    
        combo_wordright {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&kp LC(RIGHT)>;
            layers = <0>;            
        };
        
        combo_home {
            timeout-ms = <30>;
            key-positions = <7 16>;
            bindings = <&kp HOME>;
            layers = <0>;            
        };     
        
        combo_end {
            timeout-ms = <30>;
            key-positions = <7 18>;
            bindings = <&kp END>;
            layers = <0>;            
        };         
        
        combo_pgup {
            timeout-ms = <30>;
            key-positions = <7 16 18>;
            bindings = <&kp PG_UP>;
            layers = <0>;            
        };   
        
        combo_pgdown {
            timeout-ms = <30>;
            key-positions = <16 17 18>;
            bindings = <&kp PG_DN>;
            layers = <0>;            
        };        
                
    };

            keymap {
                    compatible = "zmk,keymap";

                    default_layer {
    // -----------------------------------------------------------------------------------------
    // |  Q  |  W  |  E  |  R  |  T   |  Y  |  U   |  I  |  O  |  P  |
    // |  A  |  S  |  D  |  F  |  G   |  H  |  J   |  K  |  L  |  [  |
    // |  Z  |  X  |  C  |  V  |  B   |  N  |  M   |  ,  |  .  |  '  |
    //             | CTL | ALT |  SPC | ENT | GUI  | LYR |
                            bindings = <
    &kp Q      &kp W      &kp E       &kp R       &kp T    &kp Y   &kp U         &kp I        &kp O       &kp P
    &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G    &kp H   &hm RSHFT J   &hm RCTRL K  &hm LALT L  &tdhmbkt
    &kp Z      &kp X      &kp C       &kp V       &kp B    &kp N   &kp M         &tdcb        &tdds       &tdqs
    &to 0      &mo 2      &lt 1 SPC   &lt 1 RET   &mo 2    &to 0
                            >;
                    };

                    numnav_layer {
    // -----------------------------------------------------------------------------------------
    // |  7  |  8  |  9  |  0  |  Cut   |  Home  |  PGDN |  Up   |  PGUP  |  End  |
    // |  4  |  5  |  6  |  -  |  Copy  |  Ins   |  Left |  Down |  Right |  Del  |
    // |  1  |  2  |  3  |  =  |  Paste |  Cntxt |  LNG  |  ,    |  .     |  '    |
    //             | CTL | ALT |  SPC   |  ENT   |  GUI  |  LYR  |
                            bindings = <
    AS(N7)       AS(N8)       AS(N9)        AS(N0)           &kp LC(X)   &kp HOME    &kp PG_UP       &kp UP          &kp PG_DN       &kp END    
    &hm LGUI N4  &hm LALT N5  &hm LCTRL N6  &tdhmuds         &kp LC(C)   &kp INS     &hm RSHFT LEFT  &hm RCTRL DOWN  &hm RALT RIGHT  &trans
    &kp N1       &kp N2       &kp N3        &kp EQUAL        &kp LC(V)   &kp DEL     &kp PSCRN       &trans          &trans          &trans
    &to 0        &trans       &trans        &trans           &trans      &to 0
                            >;
                    };

                    FandM_layer {
    // -----------------------------------------------------------------------------------------
    // |BTCLR | RST | BOOT | XXXX | XXXX | XXXX | F9-12 | VolDn | Mute | VolUp |
    // | BT3  | BT4 | XXXX | XXXX | XXXX | XXXX | F5-8  | Prev  | Ply  | Next  |
    // | BT0  | BT1 | BT2  | XXXX | XXXX | XXXX | F1-4  | BrtDn | XXXX | BrtUp |
    //             | CTL | ALT |  SPC | ENT | GUI  | LYR |
                            bindings = <
    &kp F7      &kp F8       &kp F9        &kp F12        &sk LCTRL  &sk LGUI                &trans  &trans  &trans &trans
    &hm LGUI F4 &hm LALT F5  &hm LCTRL F6  &hm LSHFT F11  &sk LALT   &sk LC(LS(LALT))          &trans  &trans  &trans &trans
    &kp F1      &kp F2       &kp F3        &kp F10        &sk LSHIFT &sk LC(LS(LA(LGUI)))   &trans  &trans  &trans &trans
    &to 0       &trans       &trans        &trans         &trans &to 0
                            >;
                    };
    
                    sys_layer {
    // -----------------------------------------------------------------------------------------
    // |BTCLR | RST | BOOT | XXXX | XXXX | XXXX | F9-12 | VolDn | Mute | VolUp |
    // | BT3  | BT4 | XXXX | XXXX | XXXX | XXXX | F5-8  | Prev  | Ply  | Next  |
    // | BT0  | BT1 | BT2  | XXXX | XXXX | XXXX | F1-4  | BrtDn | XXXX | BrtUp |
    //             | CTL | ALT |  SPC | ENT | GUI  | LYR |
                            bindings = <
    &bt BT_CLR   &reset        &bootloader   &none  &none  &none  &none  &kp C_VOL_DN  &kp C_MUTE &kp C_VOL_UP
    &bt BT_SEL 3 &bt BT_SEL 4  &none         &none  &none  &none  &none  &kp C_PREV    &kp C_PP   &kp C_NEXT
    &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2  &none  &none  &none  &none  &kp C_BRI_DN  &none      &kp C_BRI_UP
    &trans       &trans        &trans        &trans &trans &to 0
                            >;
                    };


            };
    };
